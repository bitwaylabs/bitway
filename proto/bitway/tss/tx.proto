syntax = "proto3";
package bitway.tss;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "cosmos/msg/v1/msg.proto";
import "bitway/tss/params.proto";

option go_package = "github.com/bitwaylabs/bitway/x/tss/types";

// Msg defines the Msg service.
service Msg {
    option (cosmos.msg.v1.service) = true;

    // CompleteDKG completes the given DKG request by the participant.
    rpc CompleteDKG (MsgCompleteDKG) returns (MsgCompleteDKGResponse);

    // SubmitSignatures submits signatures.
    rpc SubmitSignatures(MsgSubmitSignatures) returns (MsgSubmitSignaturesResponse);

    // Refresh refreshes key shares.
    rpc Refresh(MsgRefresh) returns (MsgRefreshResponse);

    // CompleteRefreshing completes the given refreshing request by the participant.
    rpc CompleteRefreshing(MsgCompleteRefreshing) returns (MsgCompleteRefreshingResponse);

    // UpdateParams defines a governance operation for updating the x/tss module
    // parameters. The authority defaults to the x/gov module account.
    //
    // Since: cosmos-sdk 0.47
    rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgCompleteDKG is the Msg/CompleteDKG request type.
message MsgCompleteDKG {
  option (cosmos.msg.v1.signer) = "sender";

  // sender
  string sender = 1;
  // DKG request id
  uint64 id = 2;
  // public keys generated by DKG
  repeated string pub_keys = 3;
  // participant consensus pub key
  string consensus_pubkey = 4;
  // hex encoded participant signature
  string signature = 5;
}

// MsgCompleteDKGResponse defines the Msg/CompleteDKG response type.
message MsgCompleteDKGResponse {}

// MsgSubmitSignatures defines the Msg/SubmitSignatures request type.
message MsgSubmitSignatures {
  option (cosmos.msg.v1.signer) = "sender";

  string sender = 1;
  uint64 id = 2;
  repeated string signatures = 3;
}

// MsgSubmitSignaturesResponse defines the Msg/SubmitSignatures response type.
message MsgSubmitSignaturesResponse {}

// MsgRefresh defines the Msg/Refresh request type.
message MsgRefresh {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1;
  // list of DKGs corresponding to key shares to be refreshed
  repeated uint64 dkg_ids = 2;
  // removed participant set
  repeated string removed_participants = 3;
  // new threshold set corresponding to the DKGs
  repeated uint32 thresholds = 4;
  // timeout duration per DKG refreshing
  google.protobuf.Duration timeout_duration = 5 [(gogoproto.nullable) = false, (gogoproto.stdduration) = true];
}

// MsgRefreshResponse defines the Msg/Refresh response type.
message MsgRefreshResponse {}

// MsgCompleteRefreshing defines the Msg/CompleteRefreshing request type.
message MsgCompleteRefreshing {
  option (cosmos.msg.v1.signer) = "sender";

  // sender
  string sender = 1;
  // request id
  uint64 id = 2;
  // participant consensus pub key
  string consensus_pubkey = 3;
  // hex encoded participant signature
  string signature = 4;
}

// MsgCompleteRefreshingResponse defines the Msg/CompleteRefreshing response type.
message MsgCompleteRefreshingResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1;

  // params defines the x/tss parameters to be updated.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the Msg/UpdateParams response type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}
