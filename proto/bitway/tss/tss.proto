syntax = "proto3";
package bitway.tss;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/bitwaylabs/bitway/x/tss/types";

// DKG Status
enum DKGStatus {
  // DKG_STATUS_UNSPECIFIED defines the unknown DKG request status
  DKG_STATUS_UNSPECIFIED = 0;
  // DKG_STATUS_PENDING defines the status of the DKG request which is pending
  DKG_STATUS_PENDING = 1;
  // DKG_STATUS_COMPLETED defines the status of the DKG request which is completed
  DKG_STATUS_COMPLETED = 2;
  // DKG_STATUS_FAILED defines the status of the DKG request which failed
  DKG_STATUS_FAILED = 3;
  // DKG_STATUS_TIMEDOUT defines the status of the DKG request which timed out
  DKG_STATUS_TIMEDOUT = 4;
}

// DKG Request
message DKGRequest {
  // request id
  uint64 id = 1;
  // initiator module
  string module = 2;
  // dkg type
  string type = 3;
  // dkg intent
  int32 intent = 4;
  // participant set
  repeated string participants = 5;
  // threshold required to perform DKG
  uint32 threshold = 6;
  // batch size of keys to be generated
  uint32 batch_size = 7;
  // expiration time
  google.protobuf.Timestamp expiration_time = 8 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  // status
  DKGStatus status = 9;
}

// DKG Completion
message DKGCompletion {
  // request id
  uint64 id = 1;
  // sender
  string sender = 2;
  // public keys generated by DKG
  repeated string pub_keys = 3;
  // participant consensus pub key
  string consensus_pubkey = 4;
  // hex encoded participant signature
  string signature = 5;
}

// Signing Status
enum SigningStatus {
  // SIGNING_STATUS_UNSPECIFIED defines the unknown signing status
  SIGNING_STATUS_UNSPECIFIED = 0;
  // SIGNING_STATUS_PENDING defines the status of the signing request which is pending
  SIGNING_STATUS_PENDING = 1;
  // SIGNING_STATUS_SIGNED defines the status of the signing request which is signed
  SIGNING_STATUS_SIGNED = 2;
  // SIGNING_STATUS_FAILED defines the status of the signing request which failed due to unexpected reasons
  SIGNING_STATUS_FAILED = 3;
}

// Signing Type
enum SigningType {
    // SIGNING_TYPE_SCHNORR defines the common schnorr signing
    SIGNING_TYPE_SCHNORR = 0;
    // SIGNING_TYPE_SCHNORR_WITH_TWEAK defines the schnorr signing with tweak
    SIGNING_TYPE_SCHNORR_WITH_TWEAK = 1;
    // SIGNING_TYPE_SCHNORR_WITH_COMMITMENT defines the schnorr signing with commitment
    SIGNING_TYPE_SCHNORR_WITH_COMMITMENT = 2;
    // SIGNING_TYPE_SCHNORR_ADAPTOR defines the schnorr adaptor signing
    SIGNING_TYPE_SCHNORR_ADAPTOR = 3;
}

// Signing Options
message SigningOptions {
    // optional tweak
    string tweak = 1;
    // optional public nonce, i.e. commitment
    string nonce = 2;
    // optional adaptor point
    string adaptor_point = 3;
}

// Signing Request
message SigningRequest {
  // request id
  uint64 id = 1;
  // initiator module
  string module = 2;
  // module specific id
  string scoped_id = 3;
  // signing type
  SigningType type = 4;
  // signing intent
  int32 intent = 5;
  // signing pub key
  string pub_key = 6;
  // hashes to be signed
  repeated string sig_hashes = 7;
  // signing options
  SigningOptions options = 8;
  // creation time
  google.protobuf.Timestamp creation_time = 9 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  // status
  SigningStatus status = 10;
}

// Refreshing Status
enum RefreshingStatus {
  // REFRESHING_STATUS_UNSPECIFIED defines the unknown refreshing status
  REFRESHING_STATUS_UNSPECIFIED = 0;
  // REFRESHING_STATUS_PENDING defines the status of the refreshing request which is pending
  REFRESHING_STATUS_PENDING = 1;
  // REFRESHING_STATUS_COMPLETED defines the status of the refreshing request which is completed
  REFRESHING_STATUS_COMPLETED = 2;
  // REFRESHING_STATUS_TIMEDOUT defines the status of the refreshing request which timed out
  REFRESHING_STATUS_TIMEDOUT = 3;
}

// Refreshing Request
message RefreshingRequest {
  // request id
  uint64 id = 1;
  // request id of the DKG corresponding to the key shares to be refreshed
  uint64 dkg_id = 2;
  // removed participant set
  repeated string removed_participants = 3;
  // new threshold
  uint32 threshold = 4;
  // expiration time
  google.protobuf.Timestamp expiration_time = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  // status
  RefreshingStatus status = 6;
}

// Refreshing Completion
message RefreshingCompletion {
  // request id
  uint64 id = 1;
  // sender
  string sender = 2;
  // participant consensus pub key
  string consensus_pubkey = 3;
  // hex encoded participant signature
  string signature = 4;
}