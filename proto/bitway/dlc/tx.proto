syntax = "proto3";
package bitway.dlc;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "cosmos/msg/v1/msg.proto";
import "bitway/dlc/params.proto";
import "bitway/dlc/dlc.proto";

option go_package = "github.com/bitwaylabs/bitway/x/dlc/types";

// Msg defines the Msg service.
service Msg {
    option (cosmos.msg.v1.service) = true;

    rpc CreateDCM(MsgCreateDCM) returns (MsgCreateDCMResponse);

    // UpdateParams defines a governance operation for updating the x/dlc module
    // parameters. The authority defaults to the x/gov module account.
    //
    // Since: cosmos-sdk 0.47
    rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

message MsgCreateDCM {
    option (cosmos.msg.v1.signer) = "authority";

    // authority is the address that controls the module (defaults to x/gov unless overwritten).
    string authority = 1;
    repeated string participants = 2;
    uint32 threshold = 3;
    google.protobuf.Duration timeout_duration = 4 [(gogoproto.nullable) = false, (gogoproto.stdduration) = true];
}

message MsgCreateDCMResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1;

  // params defines the x/dlc parameters to be updated.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the Msg/UpdateParams response type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}
